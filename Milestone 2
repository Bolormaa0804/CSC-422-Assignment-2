
class Pet:
    petID = 0

    def __init__(self, ID, name, age):
        self.ID = Pet.petID
        self.name = name
        self.age = age
        Pet.petID += 1

    def __str__(self):
        return f"| {self.ID:<3} | {self.name:<10} | {self.age:<4}|"


class PetDatabase:
    def __init__(self):
        self.pets = []

    def add_pet(self, ID, name, age):
        self.pets.append(Pet(ID, name, age))
        print("Pet added successfully.")

    def show_pets(self, pets=None):
        if not pets:
            pets = self.pets
        print("+------------------------+")
        print("| ID  | NAME       | AGE |")
        print("+------------------------+")
        row = 0
        for pet in pets:
            print(f"{pet}")
            row += 1
        print("+------------------------+")
        print(f"{row} rows in set.")

    def search_by_name(self, name):
        matching_pets = [pet for pet in self.pets if pet.name.lower() == name.lower()]
        if matching_pets:
            self.show_pets(matching_pets)
        else:
            print("No pets found with that name.")

    def search_by_age(self, age):
        matching_pets = [pet for pet in self.pets if pet.age == age]
        if matching_pets:
            self.show_pets(matching_pets)
        else:
            print("No pets found with that age.")

    def remove_pet(self, ID):
            removedPet = self.pets[ID]
            del self.pets[ID]

            print(f"{removedPet} removed successfully.")

    def load_data():
        try:
            with open('petData.txt', 'r') as file:
                pet_data = json.load(file)
        except FileNotFoundError:
            pet_data = {}
            return pet_data

    def save_data(pet_data):
        with open('petData.txt', 'w') as file:
            json.dump(pet_data, file)


Database = PetDatabase()

while True:
    print("\nWhat would you like to do?")
    print("1. View all pets")
    print("2. Add more pets")
    print("3. Remove an existing pet")
    print("4. Exit Program")
    choice = input("Enter your choice (1-4): ")
    if choice == "1":
        Database.show_pets()
    elif choice == "2":
        count = 0
        while Pet.petID <= 4:
            pet = input("add pet(name, age): ")
            petIndex = pet.split(" ")
            if len(petIndex) != 2:
                print(f"Error: {petIndex[0]} is not a input.")
            else:
                while petIndex[0] != "done":
                    name = petIndex[0]
                    age = int(petIndex[1])
                    if age <= 20:
                        Database.add_pet(count, name, age)
                        count = count + 1
                    else:
                        print(f"Error: {age} is not a valid age.")
                    pet = input("add pet(name, age): ")
                    petIndex = pet.split(" ")
                else:
                    break
        else:
            print("Error: Database is full.")
        print(f"{count} pets added")
    elif choice == "3":
        Database.show_pets()
        index = int(input("Enter pet ID to remove: "))
        Database.remove_pet(index)
    elif choice == "4":
        print("Goodbye!")
        break
    else:
        print("Invalid choice. Please try again.")
